{"version":3,"file":"src_app_tablinks_tablinks_module_ts.js","mappings":"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","sources":["./src/app/arching-open.guard.ts","./src/app/controller/arching/arching-request.service.ts","./src/app/tablinks/tablinks-routing.module.ts","./src/app/tablinks/tablinks.module.ts","./src/app/tablinks/tablinks.page.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { NavController } from '@ionic/angular';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArchingOpenGuard implements CanActivate {\r\n\r\n  constructor(public navController: NavController) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      if (localStorage.getItem('arching-open') === 'true') {\r\n        return true;\r\n      } else if (localStorage.getItem('arching-open') === 'false') {\r\n        this.navController.navigateRoot('tablinks/arching');\r\n        return false;\r\n      }\r\n  }\r\n}\r\n","import { HttpClient, HttpStatusCode } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Arching } from 'src/app/entities/arching/arching';\nimport { Observable } from 'rxjs';\nimport { DateRange } from 'src/app/entities/arching/date-range';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArchingRequestService {\n\n  baseURL = environment.baseURL;\n\n  constructor(private httpClient: HttpClient) { }\n\n  newArching(arching: Arching): Observable<HttpStatusCode>{\n    return this.httpClient.post<HttpStatusCode>(this.baseURL + '/arching', arching);\n  }\n\n  getAllArching(): Observable<Arching[]> {\n    return this.httpClient.get<Arching[]>(this.baseURL + '/arching');\n  }\n\n  getArchingByDate(dateRange: DateRange): Observable<Array<Arching>> {\n    return this.httpClient.post<Arching[]>(this.baseURL + '/arching/date', dateRange);\n  }\n\n  getArchingById(id: number): Observable<Arching> {\n    return this.httpClient.get<Arching>(this.baseURL + '/arching/' + id);\n  }\n\n  getLastOneArching(): Observable<Arching> {\n    return this.httpClient.get<Arching>(this.baseURL + '/arching/last-one');\n  }\n\n  setEndDate(archingEndDate: Arching , archingId: number): Observable<Arching>{\n    return this.httpClient.put<Arching>(this.baseURL + '/arching/' + archingId, archingEndDate);\n  }\n\n  getTotalScannedProductAmount(id: number): Observable<number> {\n    return this.httpClient.get<number>(this.baseURL + '/arching/scanned-product/amount/' + id);\n  }\n\n  getTotalFileProductAmount(id: number): Observable<number> {\n    return this.httpClient.get<number>(this.baseURL + '/arching/file-product/amount/' + id);\n  }\n\n  getTotalValence(id: number): Observable<number> {\n    return this.httpClient.get<number>(this.baseURL + '/arching/valence/' + id);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TablinksPage } from './tablinks.page';\nimport { ArchingOpenGuard } from '../arching-open.guard';\n\nconst routes: Routes = [\n  {\n    path: 'tablinks',\n    component: TablinksPage,\n    children: [\n      {\n        path: 'home',\n        loadChildren: () => import('../home/home.module').then( m => m.HomePageModule),\n        canActivate: [ArchingOpenGuard]\n      },\n      {\n        path: 'arching',\n        loadChildren: () => import('../arching/arching.module').then( m => m.ArchingPageModule)\n      },\n      {\n        path: 'file-product',\n        loadChildren: () => import('../file-product/file-product.module').then( m => m.FileProductPageModule),\n        canActivate: [ArchingOpenGuard]\n      },\n      {\n        path: '',\n        redirectTo: '/tablinks/home',\n        pathMatch: 'full'\n      }\n    ]\n  },\n  {\n    path: '',\n    redirectTo: '/tablinks/home',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TablinksPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TablinksPageRoutingModule } from './tablinks-routing.module';\n\nimport { TablinksPage } from './tablinks.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TablinksPageRoutingModule\n  ],\n  declarations: [TablinksPage]\n})\nexport class TablinksPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ArchingRequestService } from '../controller/arching/arching-request.service';\n\n@Component({\n  selector: 'app-tablinks',\n  templateUrl: './tablinks.page.html',\n  styleUrls: ['./tablinks.page.scss'],\n})\nexport class TablinksPage implements OnInit {\n\n  constructor(private archingRequestService: ArchingRequestService) { }\n\n  async ngOnInit(): Promise<void> {\n    await this.getLastOneArching();\n  }\n\n  async getLastOneArching(): Promise<void>{\n    return await new Promise<void>((resolve, reject) => {\n      this.archingRequestService.getLastOneArching().subscribe(data => {\n        if (data.endDate === null) {\n          localStorage.setItem('arching-open', 'true');\n        } else {\n          localStorage.setItem('arching-open', 'false');\n        }\n        resolve();\n      });\n    });\n  }\n\n}\n"],"names":["Component","ArchingRequestService","TablinksPage","constructor","archingRequestService","ngOnInit","getLastOneArching","Promise","resolve","reject","subscribe","data","endDate","localStorage","setItem","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}